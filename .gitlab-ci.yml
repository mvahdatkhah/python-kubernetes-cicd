stages:
  - build
  - test
  - deploy
  - cleanup

variables:
  REGISTRY: registry.sepehrtv.org
  IMAGE_NAME: $REGISTRY/node-app
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA
  K8S_NAMESPACE_DEV: node-app
  K8S_NAMESPACE_PROD: node-app

cache:
  key: "pip-${CI_COMMIT_REF_SLUG}"
  paths:
    - .cache/pip

# ==========================
# Build Stage
# ==========================
build:
  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  before_script:
    # Decode Base64 registry password
    - echo "$REGISTRY_PASS" | base64 -d | docker login $REGISTRY -u "$REGISTRY_USER" --password-stdin
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG -f Dockerfile .
    - docker push $IMAGE_NAME:$IMAGE_TAG
    - docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
    - docker push $IMAGE_NAME:latest
  tags:
    - docker

# ==========================
# Test Stage (Python)
# ==========================
include:
  - local: ci/test.yml

# ==========================
# Deploy to Dev
# ==========================
deploy-dev:
  stage: deploy
  image: dtzar/helm-kubectl:3.18
  before_script:
    - mkdir -p ~/.kube && chmod 700 ~/.kube
    - echo "$KUBE_CONFIG" | base64 -d > ~/.kube/config
    - chmod 600 ~/.kube/config
    - kubectl get ns $K8S_NAMESPACE_DEV || kubectl create ns $K8S_NAMESPACE_DEV
    # Create Docker registry secret if missing
    - |
      kubectl create secret docker-registry regcred \
        --docker-server=$REGISTRY \
        --docker-username=$REGISTRY_USER \
        --docker-password=$(echo $REGISTRY_PASS | base64 -d) \
        --docker-email=miladvahdatkhah@gmail.com \
        --namespace=$K8S_NAMESPACE_DEV \
        --dry-run=client -o yaml | kubectl apply -f -
  script:
    - sed -i "s|\${CI_COMMIT_SHORT_SHA}|$IMAGE_TAG|g" k8s/deployment.yaml.template > k8s/deployment.yaml
    - kubectl apply -n $K8S_NAMESPACE_DEV -f k8s/ --validate=false
  environment:
    name: dev
    url: https://python-dev.sepehrtv.org
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
  tags:
    - docker

# ==========================
# Deploy to Prod
# ==========================
deploy-prod:
  stage: deploy
  image: dtzar/helm-kubectl:3.18
  before_script:
    - mkdir -p ~/.kube && chmod 700 ~/.kube
    - echo "$KUBE_CONFIG" | base64 -d > ~/.kube/config
    - chmod 600 ~/.kube/config
    - kubectl get ns $K8S_NAMESPACE_PROD || kubectl create ns $K8S_NAMESPACE_PROD
    - |
      kubectl create secret docker-registry regcred \
        --docker-server=$REGISTRY \
        --docker-username=$REGISTRY_USER \
        --docker-password=$(echo $REGISTRY_PASS | base64 -d) \
        --docker-email=miladvahdatkhah@gmail.com \
        --namespace=$K8S_NAMESPACE_PROD \
        --dry-run=client -o yaml | kubectl apply -f -
  script:
    - sed -i "s|\${CI_COMMIT_SHORT_SHA}|$CI_COMMIT_TAG|g" k8s/deployment.yaml.template > k8s/deployment.yaml
    - kubectl apply -n $K8S_NAMESPACE_PROD -f k8s/ --validate=false
  environment:
    name: production
    url: https://python.sepehrtv.org
<<<<<<< HEAD
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_TAG'
      when: manual
=======
  only:
    - main
    - tags
  when: manual
>>>>>>> 775b53f8d19ae444c03dd6dd5a5c908d3681a831
  tags:
    - docker

# ==========================
# Cleanup old images
# ==========================
cleanup:
  stage: cleanup
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - echo "$REGISTRY_PASS" | base64 -d | docker login -u "$REGISTRY_USER" --password-stdin $REGISTRY
  script:
    - |
      echo "Cleaning old images, keeping latest + 5 most recent..."
      images=$(docker images $IMAGE_NAME --format '{{.Tag}}' | grep -v 'latest' | sort -r)
      keep=0
      for tag in $images; do
        if [ $keep -lt 5 ]; then
          keep=$((keep+1))
          continue
        fi
        docker rmi -f $IMAGE_NAME:$tag || true
      done
  when: manual
  tags:
    - docker
