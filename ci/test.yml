# ci/test.yml
test:
  stage: test
  image: python:3.12-slim
  variables:
    PIP_DISABLE_PIP_VERSION_CHECK: "1"
    PIP_NO_CACHE_DIR: "1"
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    PYTHONDONTWRITEBYTECODE: "1"
    PYTHONUNBUFFERED: "1"
  cache:
    key: "pip-${CI_COMMIT_REF_SLUG}"
    paths:
      - .cache/pip
  before_script:
    - python --version
    - python -m venv .venv
    - . .venv/bin/activate
    - pip install -U pip
    - pip install -r requirements.txt
    # install dev deps if the file exists
    - if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
  script:
    # static checks if available (won’t fail if flake8 isn’t installed)
    - if python -c "import importlib; exit(0) if importlib.util.find_spec('flake8') else exit(1)"; then flake8 .; else echo "flake8 not installed, skipping"; fi
    # run unit tests (emit JUnit if pytest is available)
    - |
      if python -c "import importlib; exit(0) if importlib.util.find_spec('pytest') else exit(1)"; then
        pytest -q --maxfail=1 --disable-warnings --junitxml=junit.xml || exit 1
      else
        echo "pytest not installed. To enable tests, add it to requirements-dev.txt"; exit 0
      fi
  artifacts:
    when: always
    reports:
      junit: junit.xml
    paths:
      - .pytest_cache/
      - junit.xml
    expire_in: 7 days
  tags:
    - docker
